skip_tags: true
clone_depth: 50

os: Visual Studio 2015

environment:
  matrix:
    - PY_MAJOR_VER: 3
      PYTHON_ARCH: "x86_64"

platform:
    - x64

build_script:
  - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda$env:PY_MAJOR_VER-latest-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  - cmd: C:\Miniconda.exe /S /D=C:\Py
  - SET MKL_NUM_THREADS=1
  - SET NUMEXPR_NUM_THREADS=1
  - SET OMP_NUM_THREADS=1
  - SET PATH=C:\Py;C:\Py\Scripts;C:\Py\Library\bin;%PATH%
  - conda config --set always_yes yes
  - conda update conda --quiet
  - pip install wheel
  - pip install -r requirements.txt
  - ps: python setup.py develop

test_script:
- pytest --doctest-modules -v --doctest-glob="*.rst" --capture=sys


after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "python setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

  - pip install twine
  - twine upload dist\* --skip-existing -u tommyod -p $TWINE_PASSWORD




